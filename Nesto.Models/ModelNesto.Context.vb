'------------------------------------------------------------------------------
' <auto-generated>
'    Este código se generó a partir de una plantilla.
'
'    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
'Imports System.Data.Objects
Imports System.Data.Entity.Core.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq

Namespace Nesto.Models

    Partial Public Class NestoEntities
        Inherits DbContext
    
        Public Sub New()
            MyBase.New("name=NestoEntities")
        End Sub
    
        Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
            Throw New UnintentionalCodeFirstException()
        End Sub
    
        Public Property Productos() As DbSet(Of Productos)
        Public Property CabAlquileres() As DbSet(Of CabAlquileres)
        Public Property PrestashopProductos() As DbSet(Of PrestashopProductos)
        Public Property ExtractoInmovilizado() As DbSet(Of ExtractoInmovilizado)
        Public Property Inmovilizados() As DbSet(Of Inmovilizados)
        Public Property LinPedidoVta() As DbSet(Of LinPedidoVta)
        Public Property CabFacturaVta() As DbSet(Of CabFacturaVta)
        Public Property CabPedidoVta() As DbSet(Of CabPedidoVta)
        Public Property LinPedidoCmp() As DbSet(Of LinPedidoCmp)
        Public Property Vendedores() As DbSet(Of Vendedores)
        Public Property CCC() As DbSet(Of CCC)
        Public Property Clientes() As DbSet(Of Clientes)
        Public Property Empresas() As DbSet(Of Empresas)
        Public Property EstadosCCC() As DbSet(Of EstadosCCC)
        Public Property Remesas() As DbSet(Of Remesas)
        Public Property ExtractoCliente() As DbSet(Of ExtractoCliente)
        Public Property PersonasContactoCliente() As DbSet(Of PersonasContactoCliente)
        Public Property SeguimientoCliente() As DbSet(Of SeguimientoCliente)
        Public Property Cargos() As DbSet(Of Cargos)
        Public Property SubGruposProducto() As DbSet(Of SubGruposProducto)
        Public Property EstadosPlanVentajas() As DbSet(Of EstadosPlanVentajas)
        Public Property PlanesVentajas() As DbSet(Of PlanesVentajas)
        Public Property PlanVentajasCliente() As DbSet(Of PlanVentajasCliente)
        Public Property ExtractoRuta() As DbSet(Of ExtractoRuta)
        Public Property AgenciasTransporte() As DbSet(Of AgenciasTransporte)
        Public Property EnviosAgencia() As DbSet(Of EnviosAgencia)
        Public Property Rutas() As DbSet(Of Rutas)
        Public Property MultiUsuarios() As DbSet(Of MultiUsuarios)
        Public Property EtiquetasPicking() As DbSet(Of EtiquetasPicking)
        Public Property FamiliasVendedor() As DbSet(Of FamiliasVendedor)
        Public Property PreContabilidad() As DbSet(Of PreContabilidad)
        Public Property Contabilidad() As DbSet(Of Contabilidad)
        Public Property EnviosHistoria() As DbSet(Of EnviosHistoria)
        Public Property vstLinPedidoVtaConVendedor() As DbSet(Of vstLinPedidoVtaConVendedor)
        Public Property vstLinPedidoVtaComisiones() As DbSet(Of vstLinPedidoVtaComisiones)
    
        Public Overridable Function prdProductosAlquilerLista() As ObjectResult(Of prdProductosAlquiler)
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of prdProductosAlquiler)("prdProductosAlquilerLista")
        End Function
    
        Public Overridable Function Comisiones(empresa As String, desde As Nullable(Of Date), hasta As Nullable(Of Date), vendedor As String, rellenarTabla As Nullable(Of Boolean)) As ObjectResult(Of Comisiones_Result)
            Dim empresaParameter As ObjectParameter = If(empresa IsNot Nothing, New ObjectParameter("Empresa", empresa), New ObjectParameter("Empresa", GetType(String)))
    
            Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))
    
            Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))
    
            Dim vendedorParameter As ObjectParameter = If(vendedor IsNot Nothing, New ObjectParameter("Vendedor", vendedor), New ObjectParameter("Vendedor", GetType(String)))
    
            Dim rellenarTablaParameter As ObjectParameter = If(rellenarTabla.HasValue, New ObjectParameter("RellenarTabla", rellenarTabla), New ObjectParameter("RellenarTabla", GetType(Boolean)))
    
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Comisiones_Result)("Comisiones", empresaParameter, desdeParameter, hastaParameter, vendedorParameter, rellenarTablaParameter)
        End Function
    
        Public Overridable Function CrearFicheroRemesa(remesa As Nullable(Of Integer), codigo As String, fechaCobro As Nullable(Of Date)) As ObjectResult(Of String)
            Dim remesaParameter As ObjectParameter = If(remesa.HasValue, New ObjectParameter("remesa", remesa), New ObjectParameter("remesa", GetType(Integer)))
    
            Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))
    
            Dim fechaCobroParameter As ObjectParameter = If(fechaCobro.HasValue, New ObjectParameter("fechaCobro", fechaCobro), New ObjectParameter("fechaCobro", GetType(Date)))
    
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("CrearFicheroRemesa", remesaParameter, codigoParameter, fechaCobroParameter)
        End Function
    
        Public Overridable Function prdContabilizarImpagadosSepa(fichero As String) As Integer
            Dim ficheroParameter As ObjectParameter = If(fichero IsNot Nothing, New ObjectParameter("fichero", fichero), New ObjectParameter("fichero", GetType(String)))
    
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("prdContabilizarImpagadosSepa", ficheroParameter)
        End Function
    
        Public Overridable Function prdContabilizar(empresa As String, diario As String) As Integer
            Dim empresaParameter As ObjectParameter = If(empresa IsNot Nothing, New ObjectParameter("Empresa", empresa), New ObjectParameter("Empresa", GetType(String)))
    
            Dim diarioParameter As ObjectParameter = If(diario IsNot Nothing, New ObjectParameter("Diario", diario), New ObjectParameter("Diario", GetType(String)))
    
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("prdContabilizar", empresaParameter, diarioParameter)
        End Function
    
        Public Overridable Function prdDesliquidar(empresa As String, numOrden As Nullable(Of Integer)) As Integer
            Dim empresaParameter As ObjectParameter = If(empresa IsNot Nothing, New ObjectParameter("Empresa", empresa), New ObjectParameter("Empresa", GetType(String)))
    
            Dim numOrdenParameter As ObjectParameter = If(numOrden.HasValue, New ObjectParameter("NumOrden", numOrden), New ObjectParameter("NumOrden", GetType(Integer)))
    
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("prdDesliquidar", empresaParameter, numOrdenParameter)
        End Function
    
        Public Overridable Function prdModificarEfectoCliente(numOrden As Nullable(Of Integer), fechaVto As Nullable(Of Date), cCC As String, ruta As String, estado As ObjectParameter, concepto As String) As Integer
            Dim numOrdenParameter As ObjectParameter = If(numOrden.HasValue, New ObjectParameter("NumOrden", numOrden), New ObjectParameter("NumOrden", GetType(Integer)))
    
            Dim fechaVtoParameter As ObjectParameter = If(fechaVto.HasValue, New ObjectParameter("FechaVto", fechaVto), New ObjectParameter("FechaVto", GetType(Date)))
    
            Dim cCCParameter As ObjectParameter = If(cCC IsNot Nothing, New ObjectParameter("CCC", cCC), New ObjectParameter("CCC", GetType(String)))
    
            Dim rutaParameter As ObjectParameter = If(ruta IsNot Nothing, New ObjectParameter("Ruta", ruta), New ObjectParameter("Ruta", GetType(String)))
    
            Dim conceptoParameter As ObjectParameter = If(concepto IsNot Nothing, New ObjectParameter("Concepto", concepto), New ObjectParameter("Concepto", GetType(String)))
    
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("prdModificarEfectoCliente", numOrdenParameter, fechaVtoParameter, cCCParameter, rutaParameter, estado, conceptoParameter)
        End Function
    
    End Class

End Namespace
