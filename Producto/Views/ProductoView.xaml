<UserControl x:Class="Nesto.Modulos.Producto.ProductoView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
            xmlns:prism="http://prismlibrary.com/"
            xmlns:local="clr-namespace:Nesto.Modulos.Producto" 
            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
            xmlns:controlesusuario="clr-namespace:ControlesUsuario;assembly=ControlesUsuario" 
            prism:ViewModelLocator.AutoWireViewModel="True"
            mc:Ignorable="d" Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:TabConverter x:Key="TabConverter"/>
    </UserControl.Resources>

    
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
        <TextBlock Grid.Column="0" Grid.Row="0" Text="Referencia"></TextBlock>
        <TextBlock Grid.Column="0" Grid.Row="1" Text="Nombre"></TextBlock>
        <TextBlock Grid.Column="0" Grid.Row="2" Text="Tamaño"></TextBlock>
        <TextBlock Grid.Column="0" Grid.Row="3" Text="Familia"></TextBlock>
        <TextBlock Grid.Column="0" Grid.Row="4" Text="Precio Prof."></TextBlock>
        <TextBlock Grid.Column="0" Grid.Row="5" Text="Grupo"></TextBlock>
        <TextBlock Grid.Column="0" Grid.Row="6" Text="Subgrupo"></TextBlock>
        <TextBlock Grid.Column="0" Grid.Row="7" Text="Estado"></TextBlock>

        <TextBox Name="txtReferencia" Grid.Column="1" Grid.Row="0" Text="{Binding ReferenciaBuscar}" GotFocus="txtReferencia_GotFocus" KeyUp="txtReferencia_KeyUp" PreviewMouseUp="txtReferencia_PreviewMouseUp"></TextBox>
        <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding ProductoActual.Nombre}"></TextBox>
        <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding ProductoActual.Tamanno}"></TextBox>
        <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding ProductoActual.Familia}"></TextBox>
        <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding ProductoActual.PrecioProfesional, StringFormat=c}"></TextBox>
        <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding ProductoActual.Grupo}"></TextBox>
        <TextBox Grid.Column="1" Grid.Row="6" Text="{Binding ProductoActual.Subgrupo}"></TextBox>
        <TextBox Grid.Column="1" Grid.Row="7" Text="{Binding ProductoActual.Estado}"></TextBox>
        <TextBlock Grid.Column="1" Grid.Row="8" TextAlignment="Center" Text="Producto en rotura de stock del proveedor" Background="Red" FontWeight="Black" Foreground="White" Visibility="{Binding ProductoActual.RoturaStockProveedor, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}"></TextBlock>
        <Button Grid.Column="0" Grid.Row="12" Command="{Binding AbrirProductoWebCommand}" Margin="0,5">Web</Button>

        <ItemsControl ItemsSource="{Binding ProductoActual.Stocks}" Grid.Column="1" Grid.Row="9">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="PaleVioletRed" BorderThickness="3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding Almacen}" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Background="PaleVioletRed" Foreground="White" FontWeight="Black"></TextBlock>
                            <TextBlock Text="Stock" Grid.Column="0" Grid.Row="1" FontWeight="Bold"></TextBlock>
                            <TextBlock Text="{Binding Stock}" Grid.Column="1" Grid.Row="1" FontWeight="Bold"></TextBlock>
                            <TextBlock Text="Pendientes de Entregar" Grid.Column="0" Grid.Row="2"></TextBlock>
                            <TextBlock Text="{Binding PendienteEntregar}" Grid.Column="1" Grid.Row="2"></TextBlock>
                            <TextBlock Text="Pendientes de Recibir" Grid.Column="0" Grid.Row="3" Visibility="{Binding HayPendienteDeRecibir, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>
                            <TextBlock Text="{Binding PendienteRecibir}" Grid.Column="1" Grid.Row="3" Visibility="{Binding HayPendienteDeRecibir, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>
                            <TextBlock Text="Fecha Estimada de Recepción" Grid.Column="0" Grid.Row="4" Visibility="{Binding HayPendienteDeRecibir, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>
                            <TextBlock Text="{Binding FechaEstimadaRecepcion,StringFormat=d}" Grid.Column="1" Grid.Row="4" Visibility="{Binding HayPendienteDeRecibir, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>
                            <TextBlock Text="Pendientes de Reposición" Grid.Column="0" Grid.Row="5" Margin="0, 0, 10, 0"></TextBlock>
                            <TextBlock Text="{Binding PendienteReposicion}" Grid.Column="1" Grid.Row="5"></TextBlock>
                            <TextBlock Text="Cantidad Disponible" Grid.Column="0" Grid.Row="6"></TextBlock>
                            <TextBlock Text="{Binding CantidadDisponible}" Grid.Column="1" Grid.Row="6"></TextBlock>
                        </Grid> 
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>


        <Border BorderBrush="PaleVioletRed" BorderThickness="3" Grid.Column="1" Grid.Row="10" Visibility="{Binding EsDelGrupoCompras, Converter={StaticResource BooleanToVisibilityConverter}}">
            <xctk:BusyIndicator IsBusy="{Binding EstaCargandoControlesStock}" BusyContent="Calculando stock mínimo...">
                <Grid Name="grdStockMinimo">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- Contenido de las celdas -->
                    <TextBlock Text="Stock Mínimo (actual)" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="1" />
                    <xctk:ShortUpDown Value="{Binding StockMinimoActual}" Margin="3" Grid.Column="2" />
                    <TextBlock Text="Stock Mínimo (sugerido)" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="3" />
                    <TextBlock Text="{Binding StockMinimoCalculado}" VerticalAlignment="Center" Grid.Column="4" Margin="10,0,0,0"/>
                </Grid>
            </xctk:BusyIndicator>
        </Border>

        <ItemsControl Name="itcControlStock" Grid.Column="1" Grid.Row="11" Visibility="{Binding EsDeGrupoPermitido, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!-- El ItemsSource va en code-behind -->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="1" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <xctk:BusyIndicator IsBusy="{Binding EstaCargandoControlesStock}" BusyContent="Cargando stocks máximos...">
                        <Border BorderBrush="PaleVioletRed" BorderThickness="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="Stock Máximo (actual)" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" ></TextBlock>
                                <xctk:ShortUpDown Value="{Binding StockMaximoActual}" IsEnabled="{Binding IsActive}" Margin="3" Grid.Column="1" Grid.Row="0"  VerticalAlignment="Center"/>
                                <TextBlock Text="Stock Máximo (sugerido)" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center"></TextBlock>
                                <TextBlock Text="{Binding StockMaximoCalculado}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                            </Grid>
                        </Border>
                    </xctk:BusyIndicator>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Button Grid.Row="12" Grid.Column="1" Command="{Binding GuardarProductoCommand}" Visibility="{Binding EsDeGrupoPermitido, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,5">Guardar Cambios</Button>

        <Image Grid.Row="13" Grid.Column="1" Source="{Binding ProductoActual.UrlFoto}" Height="Auto" Width="Auto" Margin="0,0,10,0"/>

        <TabControl Name="tabProducto" Grid.Column="2" Grid.RowSpan="99999" Margin="3,0" SelectedIndex="{Binding PestannaSeleccionada, Converter={StaticResource TabConverter}}">
            <TabItem Header="Filtros">
                <Grid Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Filtro Nombre:" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Filtro Familia:" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Filtro Subgrupo:" VerticalAlignment="Center" Margin="0,0,3,0"/>
                    <TextBox Name="txtFiltroNombre" Grid.Column="1" Grid.Row="0" Text="{Binding FiltroNombre}" KeyUp="txtFiltroNombre_KeyUp"/>
                    <TextBox Name="txtFiltroFamilia" Grid.Column="1" Grid.Row="1" Text="{Binding FiltroFamilia}" KeyUp="txtFiltroFamilia_KeyUp"/>
                    <TextBox Name="txtFiltroSubgrupo" Grid.Column="1" Grid.Row="2" Text="{Binding FiltroSubgrupo}" KeyUp="txtFiltroSubgrupo_KeyUp"/>

                    <Button Grid.Column="2" Grid.RowSpan="3" Command="{Binding BuscarProductoCommand}" >
                        <Image MaxHeight="64" Source="pack://application:,,,/Producto;component/Images/BuscarProducto.png"></Image>
                    </Button>

                    <Button Grid.Column="3" Grid.RowSpan="3" Command="{Binding ImprimirEtiquetasProductoCommand}" Visibility="{Binding EsDeGrupoPermitido, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image MaxHeight="64" Source="pack://application:,,,/Producto;component/Images/Imprimir.png"></Image>
                    </Button>

                    <controlesusuario:BarraFiltro Grid.Row="3" Grid.ColumnSpan="3"  ListaItems="{Binding ProductosResultadoBusqueda}" Visibility="{Binding MostrarBarraBusqueda, Converter={StaticResource BooleanToVisibilityConverter}}"></controlesusuario:BarraFiltro>
                    <ComboBox Grid.Row="3" Grid.Column="3" ItemsSource="{Binding EtiquetasPosibles}" SelectedItem="{Binding EtiquetaPrimera, Mode=TwoWay}" IsEditable="True" Visibility="{Binding MostrarBarraBusqueda, Converter={StaticResource BooleanToVisibilityConverter}}"></ComboBox>
                    <xctk:BusyIndicator Grid.Row="4" Grid.ColumnSpan="9999" IsBusy="{Binding EstaCargandoProductos}" BusyContent="Procesando...">
                        <ListView ItemsSource="{Binding ProductosResultadoBusqueda.Lista}" SelectedItem="{Binding ProductoResultadoSeleccionado}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SeleccionarProductoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Nombre}"/>
                                        <TextBlock Text="{Binding Familia}"/>
                                        <TextBlock Text="{Binding Subgrupo}"/>
                                        <TextBlock Text="{Binding PrecioProfesional, StringFormat=c}"/>
                                        <TextBlock>
                                            <Run Text="Estado"/>
                                            <Run Text="{Binding Estado}"/>
                                            <Run Text="- Stock"/>
                                            <Run Text="{Binding Stocks[0].Stock}"/>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </xctk:BusyIndicator>
                </Grid>
            </TabItem>
            <TabItem Header="Clientes">
                <DataGrid ItemsSource="{Binding ClientesResultadoBusqueda}" CanUserAddRows="False" IsReadOnly="True"/>
            </TabItem>
            <TabItem Header="Videos" IsEnabled="{Binding TieneVideosRelacionados}" Visibility="{Binding TieneVideosRelacionados, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ListView Grid.Row="0" 
                  ItemsSource="{Binding VideosRelacionados}" 
                  SelectedItem="{Binding VideoRelacionadoSeleccionado}" 
                  SelectionMode="Single"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,5,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="160"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Imagen del video -->
                                    <Border Grid.Column="0" 
                CornerRadius="4" 
                Background="LightGray"
                Width="150" 
                Height="85"
                HorizontalAlignment="Left"
                VerticalAlignment="Top">
                                        <Grid>
                                            <Image Source="{Binding UrlImagen}" 
                       Stretch="UniformToFill"
                       RenderOptions.BitmapScalingMode="HighQuality">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding UrlImagen}" Value="">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>

                                            <!-- Placeholder cuando no hay imagen -->
                                            <TextBlock Text="Sin imagen" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"
                           Foreground="Gray"
                           FontSize="12">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding UrlImagen}" Value="">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>

                                    <!-- Información del video -->
                                    <StackPanel Grid.Column="1" 
                    Margin="10,0,0,0" 
                    VerticalAlignment="Top">

                                        <!-- Título -->
                                        <TextBlock Text="{Binding Titulo}" 
                       FontWeight="SemiBold" 
                       FontSize="14"
                       TextWrapping="Wrap"
                       MaxHeight="40"
                       TextTrimming="CharacterEllipsis"
                       Margin="0,0,0,5"/>

                                        <!-- Descripción -->
                                        <TextBlock Text="{Binding Descripcion}" 
                       FontSize="12"
                       Foreground="Gray"
                       TextWrapping="Wrap"
                       MaxHeight="35"
                       TextTrimming="CharacterEllipsis"
                       Margin="0,0,0,5"/>

                                        <!-- Fecha de publicación -->
                                        <TextBlock Text="{Binding FechaPublicacion, StringFormat='{}{0:dd/MM/yyyy}'}" 
                       FontSize="11"
                       Foreground="DarkGray"/>

                                        <!-- Indicador de protocolo (opcional) -->
                                        <Border Background="LightBlue" 
                    CornerRadius="2" 
                    Padding="4,2"
                    HorizontalAlignment="Left"
                    Margin="0,3,0,0">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding EsUnProtocolo}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock Text="PROTOCOLO" 
                           FontSize="10" 
                           FontWeight="Bold"
                           Foreground="DarkBlue"/>
                                        </Border>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <!-- Estilo opcional para mejorar la apariencia -->
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="Margin" Value="0,2"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <Border Grid.Row="1"
                Background="White" 
                BorderBrush="LightGray" 
                BorderThickness="1" 
                Padding="15"
                Margin="10"
                ClipToBounds="True">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding VideoCompletoSeleccionado}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" ClipToBounds="True">
                            <StackPanel DataContext="{Binding VideoCompletoSeleccionado}" ClipToBounds="True">

                                <!-- Título del video -->
                                <TextBlock Text="{Binding Titulo}" 
           FontSize="18" 
           FontWeight="Bold" 
           TextWrapping="Wrap"
           Margin="0,0,0,15"
           Foreground="DarkBlue"/>

                                <!-- Imagen/Preview del video -->
                                <Border Background="LightGray" 
        HorizontalAlignment="Center"
        Margin="0,0,0,15"
        Width="400" 
        Height="225">
                                    <Grid>
                                        <Image Source="{Binding UrlImagen}" 
               Stretch="UniformToFill"
               RenderOptions.BitmapScalingMode="HighQuality">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding UrlImagen}" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>

                                        <!-- Placeholder cuando no hay imagen -->
                                        <StackPanel HorizontalAlignment="Center" 
                    VerticalAlignment="Center">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding UrlImagen}" Value="">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <TextBlock Text="📹" FontSize="48" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                                            <TextBlock Text="Vista previa no disponible" 
                       FontSize="14" 
                       Foreground="Gray" 
                       HorizontalAlignment="Center"/>
                                        </StackPanel>

                                        <!-- Botón de reproducir superpuesto -->
                                        <Button Width="60" 
                                                Height="60" 
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Background="Black" 
                                                Opacity="0.7"
                                                BorderThickness="0"
                                                Cursor="Hand"
                                                Content="▶"
                                                Foreground="White"
                                                FontSize="24"
                                                Click="Button_Click">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding UrlVideoProductoSeleccionado}" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                </Border>

                                <!-- Descripción -->
                                <TextBlock Text="Descripción:" 
           FontWeight="SemiBold" 
           FontSize="14" 
           Margin="0,0,0,8"/>
                                <Border Background="#F8F9FA" 
                    BorderBrush="#E9ECEF" 
                    BorderThickness="1" 
                    Padding="12"
                    Margin="0,0,0,15"
                    ClipToBounds="True"
                    Height="300">
                                    <RichTextBox Name="DescripcionRichTextBox"
                                                 IsReadOnly="True"
                                                 VerticalScrollBarVisibility="Auto"
                                                 Height="276"
                                                 FontFamily="Segoe UI Emoji"
                                                 TextOptions.TextFormattingMode="Ideal"
                                                 PreviewMouseLeftButtonDown="RichTextBox_PreviewMouseLeftButtonDown"
                                                 MouseMove="RichTextBox_MouseMove"
                                                 MouseLeave="RichTextBox_MouseLeave" />
                                </Border>

                                <!-- Protocolo -->
                                <TextBlock Text="Protocolo:" 
           FontWeight="SemiBold" 
           FontSize="14" 
           Margin="0,0,0,8">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Protocolo}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Protocolo}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <Border Background="#F0F8FF" 
                    BorderBrush="#B0C4DE" 
                    BorderThickness="1" 
                    Padding="12"
                    Margin="0,0,0,15"
                    ClipToBounds="True"
                    Height="300">
                                    <RichTextBox Name="ProtocoloRichTextBox"
                                                 IsReadOnly="True"
                                                 VerticalScrollBarVisibility="Auto"
                                                 Height="276"
                                                 PreviewMouseLeftButtonDown="RichTextBox_PreviewMouseLeftButtonDown"
                                                 MouseMove="RichTextBox_MouseMove"
                                                 MouseLeave="RichTextBox_MouseLeave" />
                                </Border>
                                <!-- NUEVA SECCIÓN -->
                                <Border Background="#FFFBEA" 
                                        BorderBrush="#F5C16C" 
                                        BorderThickness="1" 
                                        CornerRadius="6"
                                        Padding="12"
                                        Margin="0,0,0,15">
                                    <StackPanel>
                                        <TextBlock Text="¡Ayúdanos a mejorar!" 
                                                   FontWeight="Bold" 
                                                   FontSize="14" 
                                                   Foreground="DarkOrange"
                                                   Margin="0,0,0,8"/>               
                                        <TextBlock Text="Si ves un error en este vídeo, puedes comunicárnoslo:" 
                                                   FontSize="12" 
                                                   Foreground="Black"
                                                   TextWrapping="Wrap"
                                                   Margin="0,0,0,10"/>
                                        <TextBlock Text="Hay productos en este vídeo a los que debemos asignar una referencia. Por favor, asígnala ahora. Gracias."
                                                   Foreground="Red"
                                                   FontWeight="Bold"
                                                   Visibility="{Binding DataContext.HayVideosProductosSinReferencia, 
                                            Converter={StaticResource BooleanToVisibilityConverter},
                                            RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                   TextWrapping="Wrap"
                                                   Margin="0,0,0,10"/>
                                        <Button Content="📢 Reportar error"
                                                Command="{Binding DataContext.CorrigeVideoProductoCommand,
                                                          RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                HorizontalAlignment="Left"
                                                Padding="8,4"
                                                Background="DarkOrange"
                                                Foreground="White"
                                                FontWeight="Bold"
                                                Cursor="Hand"/>
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Header="Kit" IsEnabled="{Binding MostrarPestannaKits}" Visibility="{Binding MostrarPestannaKits,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="3">
                        <TextBlock Text="Componentes del kit:" FontWeight="Bold" FontSize="14" Margin="0,0,0,5"/>
                        <DataGrid Name="dgrProductosKit" ItemsSource="{Binding ProductosKit}" CanUserAddRows="False" IsReadOnly="True" AutoGenerateColumns="False" Height="200" MouseDoubleClick="dgrProductosKit_MouseDoubleClick">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Tipo" Binding="{Binding ContienePertenece}" Width="*"/>
                                <DataGridTextColumn Header="Producto" Binding="{Binding ProductoId}" Width="*"/>
                                <DataGridTextColumn Header="Nombre" Binding="{Binding Nombre}" Width="4*"/>
                                <DataGridTextColumn Header="Cantidad por kit" Binding="{Binding Cantidad}" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Kits a montar (negativo para desmontar)" HorizontalAlignment="Right" Margin="3"></TextBlock>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Margin="3" Value="{Binding CantidadKitMontar, UpdateSourceTrigger=PropertyChanged}"></xctk:IntegerUpDown>
                    <Button Grid.Row="2" Grid.Column="1" Margin="3" Command="{Binding MontarKitCommand}">Montar kit</Button>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>

</UserControl>
