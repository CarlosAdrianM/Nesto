<UserControl x:Class="Nesto.Modulos.PedidoCompra.Views.ListaPedidosCompraView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Nesto.Modulos.PedidoCompra.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:viewmodels="clr-namespace:Nesto.Modulos.PedidoCompra.ViewModels" 
             xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:controlesusuario="clr-namespace:ControlesUsuario;assembly=ControlesUsuario"
             d:DataContext="{d:DesignInstance Type=viewmodels:ListaPedidosCompraViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>

    <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Loaded">
            <Behaviors:InvokeCommandAction Command="{Binding CargarPedidosCommand}"/>
        </Behaviors:EventTrigger>
    </Behaviors:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <controlesusuario:BarraFiltro Name="txtFiltro" ListaItems="{Binding ListaPedidos}" ItemSeleccionado="{Binding ListaPedidos.ElementoSeleccionado}" Etiqueta="{Binding ListaPedidos.Filtro}"></controlesusuario:BarraFiltro>
            <!--
            <xctk:WatermarkTextBox Name="txtFiltro" Text="{Binding ListaPedidos.Filtro, UpdateSourceTrigger=PropertyChanged, Delay=400}" Watermark="Introduzca el filtro..." GotFocus="txtFiltro_GotFocus" PreviewMouseUp="txtFiltro_PreviewMouseUp" KeyUp="txtFiltro_KeyUp">
                <xctk:WatermarkTextBox.InputBindings>
                    <KeyBinding Command="{Binding ListaPedidos.FijarFiltroCommand}" CommandParameter="{Binding Path=Text, ElementName=txtFiltro}" Key="Enter" />
                </xctk:WatermarkTextBox.InputBindings>
            </xctk:WatermarkTextBox>
            <ItemsControl Name="itmChips" ItemsSource="{Binding ListaPedidos.FiltrosPuestos}" PreviewMouseLeftButtonUp="itmChips_PreviewMouseLeftButtonUp">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <materialDesign:Chip Content="{Binding}" DeleteCommand="{Binding Path=DataContext.ListaPedidos.QuitarFiltroCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" DeleteCommandParameter="{Binding}" IsDeletable="True" Background="LightGray" Margin="2"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            -->
        </StackPanel>
        <xctk:BusyIndicator Grid.Row="2" IsBusy="{Binding EstaCargandoListaPedidos}" BusyContent="Cargando Lista Pedidos...">
            <ListView ItemsSource="{Binding ListaPedidos.Lista}" SelectedItem="{Binding ListaPedidos.ElementoSeleccionado}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="BlanchedAlmond" BorderThickness="3" CornerRadius="10" Margin="3" Padding="3">
                            <StackPanel>
                                <TextBlock Text="{Binding Pedido}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Pedido}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding Nombre}"></TextBlock>
                                <TextBlock Text="{Binding Direccion}"></TextBlock>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Proveedor}"></TextBlock>
                                    <TextBlock xml:space="preserve" Text=" - "></TextBlock>
                                    <TextBlock Text="{Binding Fecha, StringFormat=d}"></TextBlock>
                                    <TextBlock xml:space="preserve" Text=" ("></TextBlock>
                                    <TextBlock Text="{Binding BaseImponible, StringFormat=c}"></TextBlock>
                                    <TextBlock>)</TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Background="Green" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=TieneVistoBueno, Converter={StaticResource BooleanToVisibilityConverter} }">Visto bueno</TextBlock>
                                    <TextBlock Background="Blue" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=TieneEnviado, Converter={StaticResource BooleanToVisibilityConverter} }">Enviado</TextBlock>
                                    <TextBlock Background="BlueViolet" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=TieneAlbaran, Converter={StaticResource BooleanToVisibilityConverter} }">Albarán</TextBlock>
                                    <TextBlock Background="Red" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=EsPedidoSinCrear, Converter={StaticResource BooleanToVisibilityConverter} }">Pedido sin crear</TextBlock>
                                    <!--TextBlock Background="LightGray" Foreground="Black" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=noTieneProductos, Converter={StaticResource BooleanToVisibilityConverter} }">Sin Productos</TextBlock>
                                <TextBlock Background="DarkGoldenrod" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=tienePresupuesto, Converter={StaticResource BooleanToVisibilityConverter} }">Presupuesto</TextBlock-->
                                
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </xctk:BusyIndicator>
        <CheckBox Name="chkMostrarCreados" Grid.Row="3" IsChecked="{Binding MostrarPedidosCreados}">Pedidos creados</CheckBox>
        <CheckBox Name="chkMostrarSinCrear" Grid.Row="4" IsChecked="{Binding MostrarPedidosSinCrear}">Pedidos sin crear</CheckBox>
    </Grid>
</UserControl>
