<UserControl x:Class="PlantillaVentaView" Name="Plantilla"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:local="clr-namespace:Nesto.Modulos.PlantillaVenta"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <local:PercentageConverter x:Key="porcentajeConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding NotificationRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <xctk:BusyIndicator IsBusy="{Binding estaOcupado}" BusyContent="Cargando datos...">
        <Grid>
            <xctk:Wizard Name="WizardPlantilla" 
                         CurrentPage="{Binding PaginaActual, Mode=TwoWay}"
                         CancelButtonVisibility="Hidden"
                         HelpButtonVisibility="Hidden"
                         CancelButtonClosesWindow="False"
                         FinishButtonClosesWindow="False" 
                         BackButtonContent="&lt; Anterior"
                         NextButtonContent="Siguiente &gt;"
                         FinishButtonContent="Finalizar">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Finish">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdCrearPedido, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <xctk:WizardPage x:Name="SeleccionCliente" 
                                       Title="Selección del cliente"
                                       Description="Lo primero que debemos hacer es seleccionar el cliente al que vamos a enviar el pedido. Escriba las primeras letras del nombre, dirección, teléfono o población y pulse la tecla Enter. A continuación seleccione un cliente entre los que aparezcan y se cargará su plantilla para ayudarle a realizar el pedido."
                                       CanSelectNextPage="{Binding hayUnClienteSeleccionado}">
                    
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>



                        <StackPanel Grid.Row="0">
                            <Border HorizontalAlignment="Stretch" BorderThickness="3" BorderBrush="AliceBlue">
                                <DockPanel HorizontalAlignment="Stretch">
                                    <TextBlock DockPanel.Dock="Right"  Margin="3" HorizontalAlignment="Right" Width="16" FontFamily="Segoe UI Symbol" FontSize="16" Text="🔎" />
                                    <TextBox DockPanel.Dock="Left" Name="txtFiltroCliente" Text="{Binding filtroCliente, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxPlaceholder}" Tag="Introduce algún dato del cliente..." PreviewMouseLeftButtonUp="txtFiltroCliente_MouseUp">
                                        <TextBox.InputBindings>
                                            <KeyBinding Command="{Binding cmdCargarClientesVendedor}" Key="Enter" />
                                        </TextBox.InputBindings>
                                    </TextBox>
                                </DockPanel>
                            </Border>
                        </StackPanel>
                        <ListView Name="listViewClientes" Grid.Row="1" ItemsSource="{Binding listaClientes}" SelectedItem="{Binding clienteSeleccionado}" HorizontalContentAlignment="Stretch">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderThickness="2" BorderBrush="{Binding colorEstado}" CornerRadius="5">
                                        <Grid Height="110" Margin="6">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Grid.Column="0" Width="110" Height="110">
                                                <Image Source="{Binding rutaLogo}"/>
                                            </StackPanel>

                                            <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
                                                <TextBlock Text="{Binding nombre}" FontWeight="Bold" TextWrapping="NoWrap"/>
                                                <TextBlock Text="{Binding direccion}" TextWrapping="NoWrap"/>
                                                <TextBlock Text="{Binding poblacion}" MaxHeight="60"/>
                                                <TextBlock Text="{Binding cliente}" FontStyle="Italic"/>
                                                <TextBlock Text="{Binding comentarios}" MaxHeight="60"/>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </xctk:WizardPage>
                <xctk:WizardPage x:Name="SeleccionProductos" PageType="Interior"
                                       Title="Productos que componen el pedido"
                                       Description="Ahora es el momento de seleccionar los productos que el cliente desea que le enviemos. Puede ir poniendo filtros para facilitar la búsqueda, y pulsando la tecla Enter se quedarán fijos (para quitarlos hay que pulsar Enter dejando el campo de filtrar en blanco). Si el producto que desea el cliente no lo ha comprado anteriormente, puede localizarlo pulsando el botón de Buscar en todos los productos y filtrando posteriormente los resultados."
                                       NextPage="{Binding ElementName=SeleccionEntrega}"
                                       PreviousPage="{Binding ElementName=SeleccionCliente}"
                                       CanSelectNextPage="{Binding hayProductosEnElPedido}">

                    <Grid HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0">
                            <TextBox Name="txtFiltroProducto" Text="{Binding filtroProducto, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxPlaceholder}" Tag="Introduce algún dato del producto..." PreviewMouseLeftButtonUp="txtFiltroProducto_MouseUp">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="{Binding cmdFijarFiltroProductos}" Key="Enter" />
                                </TextBox.InputBindings>
                            </TextBox>
                            <Button Name="btnBuscar" Command="{Binding cmdBuscarEnTodosLosProductos}">
                                <AccessText>_Buscar en todos los productos</AccessText>
                            </Button>
                        </StackPanel>
                        <Grid  Grid.Row="0" Grid.Column="1" Margin="3,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <TextBlock Text="{Binding clienteSeleccionado.cliente}"></TextBlock>
                                <TextBlock Text="{Binding clienteSeleccionado.nombre}"></TextBlock>
                                <TextBlock Text="{Binding clienteSeleccionado.direccion}"></TextBlock>
                                <TextBlock Text="{Binding clienteSeleccionado.telefono}"></TextBlock>
                            </StackPanel>
                            <StackPanel Grid.Column="1">
                                <TextBlock Text="{Binding clienteSeleccionado.vendedor}"></TextBlock>
                                <TextBlock Text="{Binding baseImponiblePedido, StringFormat=c}"></TextBlock>
                                <TextBlock Text="{Binding totalPedido, StringFormat=c}"></TextBlock>
                                <TextBox Text="{Binding clienteSeleccionado.iva}" IsReadOnly="True" Background="Transparent" BorderThickness="0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick" >
                                            <i:InvokeCommandAction Command="{Binding CambiarIvaCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                            </StackPanel>
                            <StackPanel Grid.Column="2">
                                <TextBlock Text="Base Imponible para Portes"></TextBlock>
                                <TextBlock Text="{Binding baseImponibleParaPortes, StringFormat=c}"></TextBlock>
                                <ComboBox ItemsSource="{Binding listaAlmacenes}" SelectedItem="{Binding almacenSeleccionado}" DisplayMemberPath="descripcion" IsEnabled="{Binding NoHayProductosEnElPedido}"></ComboBox>
                            </StackPanel>
                        </Grid>
                        <ListView x:Name="lstProductos" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" ItemsSource="{Binding listaProductos}" SelectedItem="{Binding productoSeleccionado}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel Height="110" Margin="6" HorizontalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                                        <!--Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </-->

                                        <StackPanel DockPanel.Dock="Left" Grid.Column="0" Width="110" MinWidth="110" Height="110" >
                                            
                                            <Image Source="{Binding imagen}" Height="100" Width="100" Visibility="{Binding imagenVisible}" Margin="0,0,10,0">
                                                <xctk:MagnifierManager.Magnifier>
                                                    <xctk:Magnifier Radius="100" ZoomFactor=".3" />
                                                </xctk:MagnifierManager.Magnifier>
                                            </Image>
                                            <Border Background="{Binding colorEstado}" Height="110" Width="110" HorizontalAlignment="Left" Margin="0,0,10,0"/>
                                        </StackPanel>

                                        <DockPanel DockPanel.Dock="Right" HorizontalAlignment="Stretch">
                                            
                                            <Grid DockPanel.Dock="Right" Width="110" MinWidth="110" Height="110" HorizontalAlignment="Stretch">

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>

                                                <StackPanel Grid.Column="0">
                                                    <TextBlock Margin="3" TextWrapping="WrapWithOverflow" Text="Cantidad Cobrada"></TextBlock>
                                                    <xctk:ShortUpDown Value="{Binding cantidad}" Margin="3">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="ValueChanged">
                                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdActualizarProductosPedido, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </xctk:ShortUpDown>
                                                </StackPanel>

                                                <StackPanel Grid.Column="1">
                                                    <TextBlock Margin="3" TextWrapping="WrapWithOverflow" >Cantidad Oferta</TextBlock>
                                                    <xctk:ShortUpDown Value="{Binding cantidadOferta}" Margin="3" IsEnabled="{Binding aplicarDescuentoFicha}" >
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="ValueChanged">
                                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdActualizarProductosPedido, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </xctk:ShortUpDown>
                                                </StackPanel>
                                            </Grid>
                                            <DockPanel DockPanel.Dock="Right" HorizontalAlignment="Stretch">
                                                <StackPanel DockPanel.Dock="Left" VerticalAlignment="Top" Margin="10,0,0,0" HorizontalAlignment="Stretch">
                                                    <TextBlock Text="{Binding textoNombreProducto}" FontWeight="Bold" TextWrapping="WrapWithOverflow" HorizontalAlignment="Stretch"/>
                                                    <TextBlock Text="{Binding producto}" TextWrapping="WrapWithOverflow" HorizontalAlignment="Stretch"/>
                                                    <TextBlock Text="{Binding familia}" MaxHeight="60" TextWrapping="WrapWithOverflow" HorizontalAlignment="Stretch"/>
                                                    <TextBlock Text="{Binding subGrupo}" MaxHeight="60" TextWrapping="WrapWithOverflow" HorizontalAlignment="Stretch"/>
                                                    <TextBlock Text="{Binding precio, StringFormat=c}" MaxHeight="60" TextWrapping="WrapWithOverflow" HorizontalAlignment="Stretch"/>
                                                    <TextBlock Text="{Binding textoFechaUltimaVenta}" MaxHeight="60" TextWrapping="WrapWithOverflow" HorizontalAlignment="Stretch"/>
                                                    <TextBlock Text="{Binding textoUnidadesVendidas}" TextWrapping="WrapWithOverflow" HorizontalAlignment="Stretch"/>
                                                </StackPanel>
                                            </DockPanel>
                                        </DockPanel>
                                        
                                    </DockPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <DockPanel Grid.Row="1" Grid.Column="1" >
                            <DataGrid DockPanel.Dock="Bottom" ItemsSource="{Binding listaUltimasVentas}" AutoGenerateColumns="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ColumnWidth="*"  CanUserAddRows="False" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Fecha" Binding="{Binding fecha, StringFormat=d}" />
                                    <DataGridTextColumn Header="Cantidad" Binding="{Binding cantidad}" />
                                    <DataGridTextColumn Header="Bruto Unidad" Binding="{Binding precioBruto, StringFormat=c}">
                                        <DataGridTextColumn.CellStyle>
                                            <Style>
                                                <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Descuentos" Binding="{Binding descuentos, StringFormat=p}" />
                                    <DataGridTextColumn Header="Neto Unidad" Binding="{Binding precioNeto, StringFormat=c}">
                                        <DataGridTextColumn.CellStyle>
                                            <Style>
                                                <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <DataGrid Name="grdListaProductos" DockPanel.Dock="Top" ItemsSource="{Binding listaProductosPedido}" AutoGenerateColumns="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ColumnWidth="*"  CanUserAddRows="False" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding productoPedidoSeleccionado}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CargarProductoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Resources>
                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
                                                <Setter Property="Background" Value="WhiteSmoke"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Producto" Binding="{Binding producto}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Texto" Binding="{Binding texto}" Width="3*" IsReadOnly="False"/>
                                    <DataGridTextColumn Header="Tamaño" Binding="{Binding tamanno}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Und.M." Binding="{Binding unidadMedida}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Familia" Binding="{Binding familia}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="SubGrupo" Binding="{Binding subGrupo}" Width="2*" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Cantidad" Binding="{Binding cantidad}" IsReadOnly="False">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="CellEditEnded">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdActualizarProductosPedido, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <DataGridTextColumn.CellStyle>
                                            <Style>
                                                <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Oferta" Binding="{Binding cantidadOferta}" IsReadOnly="False">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="CellEditEnded">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdActualizarProductosPedido, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
                                                <Setter Property="IsEnabled" Value="{Binding aplicarDescuentoFicha}" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Precio" Binding="{Binding precio, StringFormat=c}" IsReadOnly="False">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
                                                <Setter Property="IsEnabled" Value="{Binding precioHabilitado}" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="% Dto." Binding="{Binding descuento, Converter={StaticResource porcentajeConverter}}" IsReadOnly="False">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
                                                <Setter Property="IsEnabled" Value="{Binding aplicarDescuento}" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Setter Property="TextElement.Foreground" Value="{Binding colorStock}"/>
                                        <Setter Property="Background" Value="{Binding colorSobrePedido}"/>
                                    </Style>
                                </DataGrid.RowStyle>
                            </DataGrid>
                        </DockPanel>
                        <StackPanel Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" Margin="3,0">
                            <TextBlock TextWrapping="Wrap">Este comentario lo verá el compañero de almacén que prepare el pedido. El cliente no ve este comentario.</TextBlock>
                            <TextBox Text="{Binding clienteSeleccionado.comentarioPicking}"/>
                        </StackPanel>
                    </Grid>
                </xctk:WizardPage>
                <xctk:WizardPage x:Name="SeleccionEntrega" PageType="Interior"
                                       Title="Dirección de Entrega del Pedido"
                                       Description="¿Dónde quiere que le entreguemos el pedido?">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Enter">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdCargarDireccionesEntrega, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <ListView Grid.Column="0" ItemsSource="{Binding listaDireccionesEntrega}" SelectedItem="{Binding direccionEntregaSeleccionada}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="55" Margin="6" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Column="0" Width="55" Height="55" >
                                            <Image Source="pack://application:,,,/PlantillaVenta;component/Images/Direccion.jpg"/>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0" >
                                            <TextBlock Text="{Binding direccion}" TextWrapping="NoWrap"/>
                                            <TextBlock Text="{Binding textoPoblacion}" MaxHeight="60"/>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <StackPanel Grid.Column="1">
                            <TextBlock TextWrapping="Wrap" Margin="3,0">Este comentario lo leerá la agencia y también el cliente, porque aparecerá en la factura:</TextBlock>
                            <TextBox TextWrapping="Wrap" Text="{Binding direccionEntregaSeleccionada.comentarioRuta}" Margin="3,0"/>
                            <CheckBox Content="Servir Junto" IsChecked="{Binding direccionEntregaSeleccionada.servirJunto}" Margin="3,0"/>
                            <CheckBox Content="Mantener Junto" IsChecked="{Binding direccionEntregaSeleccionada.mantenerJunto}" Margin="3,0"/>
                            <TextBlock Margin="3,0">
                                <Run Text="Periodo de Facturación:"></Run>
                                <Run Text="{Binding direccionEntregaSeleccionada.periodoFacturacion}"></Run>
                            </TextBlock>
                            <TextBlock></TextBlock>
                            <TextBlock Margin="3,0">Fecha de entrega:</TextBlock>
                            <Grid Margin="3,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>
                                <xctk:DateTimePicker Grid.Column="0" Minimum="{Binding fechaMinimaEntrega}" Format="ShortDate" AutoCloseCalendar="True" TimePickerVisibility="Hidden"  Value="{Binding fechaEntrega}"></xctk:DateTimePicker>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </xctk:WizardPage>
                <xctk:WizardPage x:Name="Finalizar" PageType="Interior"
                                 Title="Finalizar"
                                 NextButtonVisibility="Hidden"
                                 Description="Ya tenemos toda la información necesaria. Pulse el botón finalizar para crear el pedido en Nesto."
                                 CanFinish="{Binding SePuedeFinalizar}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Enter">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdCargarFormasPago, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" />
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdCargarFormasVenta, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" />
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.cmdCargarPlazosPago, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel>
                        <TextBlock>Seleccione la forma de venta del pedido:</TextBlock>
                        <RadioButton Content="Directa" IsChecked="{Binding formaVentaDirecta,Mode=TwoWay}"/>
                        <RadioButton Content="Teléfono" IsChecked="{Binding formaVentaTelefono,Mode=TwoWay}"/>
                        <StackPanel Orientation="Horizontal">
                            <RadioButton Content="Otras: " IsChecked="{Binding formaVentaOtras,Mode=TwoWay}"/>
                            <ComboBox MinWidth="300" IsEnabled="{Binding formaVentaOtras}" ItemsSource="{Binding listaFormasVenta}" SelectedItem="{Binding formaVentaOtrasSeleccionada}" DisplayMemberPath="descripcion"></ComboBox>
                        </StackPanel>

                        <TextBlock></TextBlock>
                        <TextBlock>Seleccione la forma de pago y los plazos:</TextBlock>
                        <ComboBox MinWidth="300" ItemsSource="{Binding listaFormasPago}" SelectedItem="{Binding formaPagoSeleccionada}" DisplayMemberPath="descripcion"></ComboBox>
                        <ComboBox MinWidth="300" ItemsSource="{Binding listaPlazosPago}" SelectedItem="{Binding plazoPagoSeleccionado}" DisplayMemberPath="descripcion"></ComboBox>

                        <TextBlock></TextBlock>
                        <CheckBox IsChecked="{Binding EsPresupuesto}">¿Crear como Presupuesto?</CheckBox>

                        <TextBlock></TextBlock>
                        <TextBlock></TextBlock>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0"  Orientation="Horizontal" Visibility="{Binding SePuedeServirConGlovo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Image Source="Images/logo_glovo.png"/>
                            </StackPanel>
                            <CheckBox Grid.Row="1" IsChecked="{Binding EnviarPorGlovo}" Visibility="{Binding SePuedeServirConGlovo, Converter={StaticResource BooleanToVisibilityConverter}}">Enviar por Glovo</CheckBox>
                            <StackPanel Grid.Row="3" Visibility="{Binding EnviarPorGlovo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>Dirección a tramitar:</TextBlock>
                                    <TextBox IsEnabled="False" Text="{Binding DireccionGoogleMaps}"></TextBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>Portes:</TextBlock>
                                    <TextBox IsEnabled="False" Text="{Binding PortesGlovo, StringFormat=c}"></TextBox>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </StackPanel>

                </xctk:WizardPage>
            </xctk:Wizard>
        </Grid>
    </xctk:BusyIndicator>
</UserControl>
