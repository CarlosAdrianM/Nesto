<UserControl x:Class="ListaPedidosVenta"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:controles="clr-namespace:ControlesUsuario;assembly=ControlesUsuario" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:pedidoventa="clr-namespace:Nesto.Modulos.PedidoVenta" 
             d:DataContext="{d:DesignInstance Type=pedidoventa:ListaPedidosVentaViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding cmdCargarListaPedidos}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <xctk:BusyIndicator Grid.Row="2" IsBusy="{Binding estaCargandoListaPedidos}" BusyContent="Cargando Lista Pedidos..." FocusAfterBusy="{Binding ElementName=txtFiltro}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <controles:SelectorEmpresa Grid.Row="0" Configuracion="{Binding configuracion}" Seleccionada="{Binding empresaSeleccionada, Mode=TwoWay}" Etiqueta="Empresa:"></controles:SelectorEmpresa>
            <controles:BarraFiltro Name="txtFiltro" Grid.Row="1" ListaItems="{Binding ListaPedidos}"></controles:BarraFiltro>
            <ListView Grid.Row="2" ItemsSource="{Binding ListaPedidos.Lista}" SelectedItem="{Binding resumenSeleccionado}" HorizontalContentAlignment="Stretch">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="BlanchedAlmond" BorderThickness="3" CornerRadius="10" Margin="3" Padding="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                            
                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="{Binding nombre}"></TextBlock>
                                    <TextBlock Text="{Binding direccion}"></TextBlock>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding cliente}"></TextBlock>
                                        <TextBlock xml:space="preserve" Text=" - "></TextBlock>
                                        <TextBlock Text="{Binding fecha, StringFormat=d}"></TextBlock>
                                        <TextBlock xml:space="preserve" Text=" ("></TextBlock>
                                        <TextBlock Text="{Binding baseImponible, StringFormat=c}"></TextBlock>
                                        <TextBlock>)</TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Background="Red" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=tienePendientes, Converter={StaticResource BooleanToVisibilityConverter} }">Pendientes</TextBlock>
                                        <TextBlock Background="Green" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=tienePicking, Converter={StaticResource BooleanToVisibilityConverter} }">Picking</TextBlock>
                                        <TextBlock Background="Blue" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=tieneFechasFuturas, Converter={StaticResource BooleanToVisibilityConverter} }">En Espera</TextBlock>
                                        <TextBlock Background="LightGray" Foreground="Black" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=noTieneProductos, Converter={StaticResource BooleanToVisibilityConverter} }">Sin Productos</TextBlock>
                                        <TextBlock Background="DarkGoldenrod" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=tienePresupuesto, Converter={StaticResource BooleanToVisibilityConverter} }">Presupuesto</TextBlock>
                                        <TextBlock Background="BlueViolet" Foreground="White" Margin="0,0,5,5" Padding="3,0" Visibility="{Binding Path=tieneSeguimiento, Converter={StaticResource BooleanToVisibilityConverter} }" Text="{Binding ultimoSeguimiento}"></TextBlock>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding 
                           RelativeSource={RelativeSource Mode=FindAncestor,
                           AncestorType={x:Type ListViewItem}},Path=IsSelected}" 
                 Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <TextBlock Text="{Binding DataContext.TextoUnirPedido, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"></TextBlock>
                                    <ComboBox ItemsSource="{Binding DataContext.ListaPedidosPendientes, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" DisplayMemberPath="numero" SelectedItem="{Binding DataContext.PedidoPendienteUnir, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                    AncestorType={x:Type ListViewItem}},Path=IsSelected}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <CheckBox Grid.Row="3" IsChecked="{Binding mostrarPresupuestos}">Mostrar Presupuestos</CheckBox>
            <CheckBox Grid.Row="4" IsChecked="{Binding mostrarSoloPendientes}">Mostrar Sólo Pendientes</CheckBox>
            <CheckBox Grid.Row="5" IsChecked="{Binding mostrarSoloPicking}">Mostrar Sólo Picking</CheckBox>
        </Grid>
        </xctk:BusyIndicator>
        
    

</UserControl>
